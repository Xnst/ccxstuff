#! /usr/bin/env python3

#  usage:   $ dynarun jobname 
#  script needs an emptyfile in remote root:  $: touch opencheck

import sys

def writeResultfile(r1, flist):
    '''
    reads the results fom a frd-file generated by Calculix with
    the *EL FILE and *NODE FILE cards
    
    The outcome is csv-files named as the result in name.
    The csv file have columns nodenumber and the results in thet node
    '''
    storhet = flist[r1+2].split()[1].lower()
    fut = open(storhet + '.csv', 'w')
    rc = r1 + 3
    reslist = []
    while flist[rc].split()[0] == '-5':
        reslist.append(flist[rc].split()[1])
        rc += 1

    headString = 'nod'
    for st in reslist:
        headString += ',{}'.format(st)
    headString += '\n'
    fut.write(headString)
    
    while flist[rc].split()[0] == '-1':
        str1 = flist[rc]
        nodnum = str1[3:13].strip()
        slen = len(str1[13:])
        rant = int((slen - slen % 12) / 12)
        if rc == 272337:
            print(str1)
            print(len(str1), len(str1[13:]))
            print(rant, len(str1[13:])%12)
        resStr = ''
        for i in range(rant):
            r1 = 13 + i*12
            resStr += ',{}'.format(str1[r1:r1+12])
        utStr = nodnum + resStr + '\n'
        fut.write(utStr)
        rc += 1
        
    fut.close()
    return

    
if len(sys.argv)==2:
    filename = sys.argv[1]
    fin = open(filename, 'r')
    fillist = fin.readlines()
    fin.close()
    r = -1
    rSteps = []
    for item in fillist:
        r += 1
        if '1PSTEP' in item:
            rSteps.append(r)

    for i in range(len(rSteps)):
        writeResultfile(rSteps[i], fillist)

else:
    print(' ')
    print("Anvandning:")
    print(" resultExport.py jobname.frd")
    print("jobname is a result file from ccx")
    print("In inp file Use:")
    print("*EL FILE")
    print("S ")
    print(" ")
